.inputGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  width: 100%;
}

.label {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--color-text);
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.label.disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.label.error {
  color: var(--color-error);
}

.requiredIndicator {
  color: var(--color-error);
  font-weight: bold;
  margin-left: 2px;
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.input {
  width: 100%;
  min-height: 44px; /* WCAG touch target size */
  padding: var(--spacing-sm) var(--spacing-md);
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  line-height: 1.5;
  color: var(--color-text);
  background-color: var(--color-background);
  border: 2px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: all var(--transition-fast);
}

.input::placeholder {
  color: var(--color-text-secondary);
  opacity: 0.7;
}

/* Hover state */
.input:hover:not(:disabled) {
  border-color: var(--color-primary);
}

/* Focus state - Critical for keyboard navigation */
.input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(0, 86, 179, 0.1);
}

.input:focus-visible {
  outline: var(--focus-outline-width) solid var(--color-focus);
  outline-offset: 2px;
}

/* Error state - Not indicated by color alone */
.input.error {
  border-color: var(--color-error);
  background-color: var(--color-error-bg);
}

.input.error:focus {
  box-shadow: 0 0 0 3px rgba(132, 32, 41, 0.1);
}

/* Disabled state */
.input:disabled,
.input.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--color-surface);
}

/* Input with voice button */
.input.withVoice {
  padding-right: 48px;
}

/* Voice input button */
.voiceButton {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 36px;
  height: 36px;
  padding: 8px;
  border: none;
  background-color: transparent;
  color: var(--color-primary);
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: all var(--transition-fast);
  display: flex;
  align-items: center;
  justify-content: center;
}

.voiceButton:hover:not(:disabled) {
  background-color: var(--color-surface);
}

.voiceButton:focus-visible {
  outline: var(--focus-outline-width) solid var(--color-focus);
  outline-offset: 2px;
}

.voiceButton:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* Error message */
.errorMessage {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) 0;
  font-size: var(--font-size-sm);
  color: var(--color-error);
  line-height: 1.4;
}

.errorIcon {
  flex-shrink: 0;
  margin-top: 2px;
}

/* Helper text */
.helperText {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  line-height: 1.4;
}

/* High contrast mode */
[data-theme="high-contrast"] .input {
  border-width: 3px;
}

[data-theme="high-contrast"] .input:focus {
  outline-width: 4px;
}

[data-theme="high-contrast"] .input.error {
  border-color: var(--color-error);
  background-color: var(--color-error-bg);
}

/* Dark theme adjustments */
[data-theme="dark"] .input {
  background-color: var(--color-surface);
  border-color: var(--color-border);
}

[data-theme="dark"] .input:disabled {
  background-color: var(--color-background);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .input,
  .voiceButton {
    transition: none;
  }
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .input {
    min-height: 48px; /* Larger touch targets on mobile */
    font-size: 16px; /* Prevent zoom on iOS */
  }
}